import org.flywaydb.gradle.task.FlywayMigrateTask

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.10"
	}
}

plugins {
	id "application"
	id "java"
	id "maven-publish"
	id "org.springframework.boot" version "2.1.7.RELEASE"
	id "io.spring.dependency-management" version "1.0.8.RELEASE"
	id "info.solidsoft.pitest" version "1.4.0"
	id "org.flywaydb.flyway" version "5.2.4"
	id 'net.ltgt.apt' version '0.8'
	id 'com.google.cloud.tools.jib' version '1.6.1'
}

apply plugin: 'com.google.protobuf'

group = "com.galvao"
version = "dev"
sourceCompatibility = 11
targetCompatibility = 11

ext {
	springCloudVersion = "Greenwich.RELEASE"
	lombokVersion = "1.18.8"
	mapstructVersion = "1.3.0.Final"
	flywayVersion = "5.2.4"
	jacocoToolVersion = "0.8.2"
	grpcVersion = '1.25.0'
	protobufVersion = '3.11.0'
	protobufGradlePluginVersion = '0.8.10'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
	runtimeOnly("org.springframework.boot:spring-boot-devtools")
	implementation("org.springframework.kafka:spring-kafka")
	runtime("mysql:mysql-connector-java")
	compile("net.devh:grpc-server-spring-boot-starter:2.6.2.RELEASE")
	compile("org.apache.commons:commons-lang3")
	compileOnly("org.projectlombok:lombok:${lombokVersion}")
	compile("org.mapstruct:mapstruct:${mapstructVersion}")
	annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
	annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
	testCompile("org.springframework.boot:spring-boot-starter-test") {
		exclude group: 'org.junit.jupiter', module: 'junit-jupiter-api'
	}
	testCompile("org.flywaydb:flyway-core")
	testCompile("org.testcontainers:jdbc:1.12.5")
	testCompile("org.testcontainers:mysql:1.12.5")
	testCompile("org.testcontainers:kafka:1.13.0")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "io.grpc:grpc-bom:${grpcVersion}"
		mavenBom "com.google.protobuf:protobuf-bom:${protobufVersion}"
	}
}

subprojects {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	tasks.withType(JavaCompile) {
		sourceCompatibility = "1.8"
		targetCompatibility = "1.8"
	}
}
mainClassName = "com.galvao.wallet.WalletApplication"

protobuf {
	// Configure the protoc executable
	protoc {
		// Download from repositories
		artifact = 'com.google.protobuf:protoc:3.0.2'
	}

	// Configure the codegen plugins
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.1.2'
		}
	}

	generateProtoTasks.generatedFilesBaseDir = 'generated-sources'

	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

sourceSets {
	main {
		proto {
			srcDir 'src/main/proto'
		}
		java {
			// include self written and generated code
			srcDirs 'src/main/java', 'generated-sources/main/java', 'generated-sources/main/grpc'
		}
	}
}

jar {
	// Springboot plugin disables jar task in favour of bootJar. However jar task is required for publish artifacts to work correctly.
	dependsOn bootJar
}

flyway {
	encoding = "UTF-8"
}

task migrateLocal(type: FlywayMigrateTask) {
	configFiles = ["doc/flyway/flyway_LOCAL.conf"]
}

// to deploy at docker hub
/*jib {
	from {
		image = "openjdk:8-jdk-alpine"
		auth {
			username = ""
			password = ""
		}
	}
	to {
		image = "registry.hub.docker.com/galvaoti/wallet-server"
		auth {
			username = ""
			password = ""
		}
	}
	container {
		format = "Docker"
		mainClass = 'WalletApplication'
	}
	allowInsecureRegistries = true
}*/